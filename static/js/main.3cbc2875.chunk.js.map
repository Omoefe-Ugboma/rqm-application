{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","quotes","quote","author","index","getRandomIndex","length","Math","floor","random","setState","fetch","then","res","json","this","tweetURL","className","id","target","href","onClick","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAyFeA,G,kNA3EbC,MAAQ,CACNC,OAAQ,CAEN,CACEC,MAAM,8EACNC,OAAO,gBAIXC,MAAO,G,EAaTC,eAAiB,WAAM,IACbJ,EAAW,EAAKD,MAAhBC,OACR,GAAGA,EAAOK,OAAS,EAAE,CACnB,IAAMF,EAAQG,KAAKC,MAAMD,KAAKE,SAAWR,EAAOK,QAChD,EAAKI,SAAS,CACZN,Y,kEAfc,IAAD,OAEjBO,MAjBQ,0IAiBGC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAC1BF,MAAK,SAAAC,GACL,EAAKH,SAAS,CACZT,OAAOY,EAAIZ,QACV,EAAKI,qB,+BAeF,IAAD,EACoBU,KAAKf,MAEzBE,EAHA,EACED,OADF,EACUG,OAIVY,EAAQ,kDACXd,EAAMA,MADK,cACMA,EAAMC,QAE1B,OACE,qBAAKc,UAAU,mEAAf,SAEE,sBAAKA,UAAU,wBAAwBC,GAAG,YAA1C,UAEMhB,GACE,sBAAKe,UAAU,OAAf,UACE,oBAAGC,GAAG,OAAN,UACE,mBAAGD,UAAU,2BACZf,EAAMA,SAET,uBAAMe,UAAU,qBAAqBC,GAAG,SAAxC,eACGhB,EAAMC,aAKf,sBAAKc,UAAU,iCAAf,UACE,oBAAGA,UAAU,yBAAyBE,OAAO,SAC7CC,KAAMJ,EAAUE,GAAG,cADnB,UAEE,mBAAGD,UAAU,kBAFf,YAGA,yBAAQA,UAAU,yBAAyBI,QAC1CN,KAAKV,eAAgBa,GAAG,YADzB,UAEE,mBAAGD,UAAU,iBAFf,4B,GA/DIK,IAAMC,YCDTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCGdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3cbc2875.chunk.js","sourcesContent":["// import logo from './logo.svg';\nimport React from 'react';\nimport './App.css';\n\n\n//1. get the API url\n//2. create the layout (box + inner content)\n//3. add event listeners\n//4. style\n//5. complete user stories\n\nconst API = 'https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json';\n\nclass App extends React.Component{\n  state = {\n    quotes: [\n\n      {\n        quote:\"Life isn’t about getting and having, it’s about giving and being.\",\n        author:\"Kevin Kruse\"\n      \n      }\n    ],\n    index: 0\n  }\n\n  componentDidMount(){\n    // call the API and update\n    fetch(API).then(res => res.json())\n    .then(res => {\n     this.setState({\n       quotes:res.quotes\n     }, this.getRandomIndex);\n    });\n  }\n\n  getRandomIndex = () =>{\n    const { quotes } = this.state;\n    if(quotes.length > 0){\n      const index = Math.floor(Math.random() * quotes.length);\n      this.setState({\n        index\n      })\n    }\n\n  }\n\n  render(){\n    const { quotes, index } = this.state;\n    \n    const quote = quotes[index];\n\n    const tweetURL = `https://twitter.com/intent/tweet?\ntext=${quote.quote} - ${quote.author}`;\n\n    return(\n      <div className=\"wrapper d-flex align-items-center \n      justify-content-center vh-100\">\n        <div className=\"col-6 box p-4 rounded\" id=\"quote-box\">\n            {\n              quote && (\n                <div className=\"mb-4\">\n                  <p id=\"text\">\n                    <i className=\"fa fa-quote-left fa-2x\"></i>\n                    {quote.quote}\n                    </p>\n                  <cite className=\"d-block text-right\" id=\"author\">\n                  - {quote.author}\n                  </cite>\n              </div>\n              )\n            }\n            <div className=\"d-flex justify-content-between\">\n              <a className=\"btn btn-sm btn-primary\" target=\"_blank\"\n              href={tweetURL} id=\"tweet-quote\">\n                <i className=\"fa fa-twitter\"></i> Tweet</a>\n              <button className=\"btn btn-sm btn-primary\" onClick=\n              {this.getRandomIndex} id=\"new-quote\">\n                <i className=\"fa fa-random\"></i> Get Quote\n                </button>\n            </div>\n        \n        </div>\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '../node_modules/font-awesome/css/font-awesome.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// 1. import React ReactDOM\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}